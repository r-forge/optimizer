a <- x[1]
b <- x[2]
p0 <- 105
q0 <- 116
hperim <- 145
b <- hperim - a
p <- p0
q <- q0
fna <- function(a){
r2 <- (hperim+p)*(hperim - 2*a +p)*(2*a - hperim +p)*(hperim -p) - (hperim +q)*( hperim - 2*a +q)*(2*a- hperim +q)*(hperim - q)
}
aa <- seq(80:140)
aa
plot(aa, fna(aa))
points(aa, 0)
points(aa, rep(0, length(aa))
)
uniroot(fna, 80, 140)
uniroot(fna, c(80, 140))
fna <- function(a){
r2 <- (hperim+p)*(hperim - 2*a +p)*(2*a - hperim +p)*(hperim -p) - (hperim +q)*( hperim - 2*a +q)*(2*a- hperim +q)*(hperim - q)
}
astar <- uniroot(fna, c(1,200))
bstar <- hperim - astar
cat("sides are ",astar," and ", bstar, "\n")
astar <- uniroot(fna, c(1,200))
astar <- uniroot(fna, c(90,200))
bstar <- hperim - astar
astar
astar <- uniroot(fna, c(90,200))$root
bstar <- hperim - astar
cat("sides are ",astar," and ", bstar, "\n")
source("sNewton2.R")
source(file="sNewton2.R")
source(file="SNewton2.R")
f <- function(x){
return(100*(x[2] - x[1]*x[1])^2 + (1-x[1])^2)
}
gr <- function(x){
return(c(-400*x[1]*(x[2] - x[1]*x[1]) - 2*(1-x[1]), 200*(x[2] - x[1]*x[1])))
}
h <- function(x) {
a11 <- 2 - 400*x[2] + 1200*x[1]*x[1]; a21 <- -400*x[1]
return(matrix(c(a11, a21, a21, 200), 2, 2))
}
fg <- function(x){ #function and gradient
val <- f(x)
attr(val,"gradient") <- gr(x)
val
}
fgh <- function(x){ #function and gradient
val <- f(x)
attr(val,"gradient") <- gr(x)
attr(val,"hessian") <- h(x)
val
}
x0 <- c(-1.2, 1)
sink("mbrn1-170408.txt", split=TRUE)
sol1 <- SNewton2(x0, fn=f, gr=gr, hess=h, control=list(trace=TRUE))
eps0<-.Machine$double.eps
source(file="SNewton2.R")
f <- function(x){
return(100*(x[2] - x[1]*x[1])^2 + (1-x[1])^2)
}
gr <- function(x){
return(c(-400*x[1]*(x[2] - x[1]*x[1]) - 2*(1-x[1]), 200*(x[2] - x[1]*x[1])))
}
h <- function(x) {
a11 <- 2 - 400*x[2] + 1200*x[1]*x[1]; a21 <- -400*x[1]
return(matrix(c(a11, a21, a21, 200), 2, 2))
}
fg <- function(x){ #function and gradient
val <- f(x)
attr(val,"gradient") <- gr(x)
val
}
fgh <- function(x){ #function and gradient
val <- f(x)
attr(val,"gradient") <- gr(x)
attr(val,"hessian") <- h(x)
val
}
x0 <- c(-1.2, 1)
sink("mbrn1-170408.txt", split=TRUE)
sol1 <- SNewton2(x0, fn=f, gr=gr, hess=h, control=list(trace=TRUE))
sol1
?optimize
source(file="SNewton2.R")
f <- function(x){
return(100*(x[2] - x[1]*x[1])^2 + (1-x[1])^2)
}
gr <- function(x){
return(c(-400*x[1]*(x[2] - x[1]*x[1]) - 2*(1-x[1]), 200*(x[2] - x[1]*x[1])))
}
h <- function(x) {
a11 <- 2 - 400*x[2] + 1200*x[1]*x[1]; a21 <- -400*x[1]
return(matrix(c(a11, a21, a21, 200), 2, 2))
}
fg <- function(x){ #function and gradient
val <- f(x)
attr(val,"gradient") <- gr(x)
val
}
fgh <- function(x){ #function and gradient
val <- f(x)
attr(val,"gradient") <- gr(x)
attr(val,"hessian") <- h(x)
val
}
x0 <- c(-1.2, 1)
sink("mbrn1-170408.txt", split=TRUE)
sol1 <- SNewton2(x0, fn=f, gr=gr, hess=h, control=list(trace=TRUE))
source('~/Downloads/nlmissues/snewton/SNewton2.R')
f <- function(x){
return(100*(x[2] - x[1]*x[1])^2 + (1-x[1])^2)
}
gr <- function(x){
return(c(-400*x[1]*(x[2] - x[1]*x[1]) - 2*(1-x[1]), 200*(x[2] - x[1]*x[1])))
}
h <- function(x) {
a11 <- 2 - 400*x[2] + 1200*x[1]*x[1]; a21 <- -400*x[1]
return(matrix(c(a11, a21, a21, 200), 2, 2))
}
fg <- function(x){ #function and gradient
val <- f(x)
attr(val,"gradient") <- gr(x)
val
}
fgh <- function(x){ #function and gradient
val <- f(x)
attr(val,"gradient") <- gr(x)
attr(val,"hessian") <- h(x)
val
}
x0 <- c(-1.2, 1)
sink("mbrn1-170408.txt", split=TRUE)
sol1 <- SNewton2(x0, fn=f, gr=gr, hess=h, control=list(trace=TRUE))
sol1
source('~/Downloads/nlmissues/snewton/SNewton2.R')
sol1 <- SNewton2(x0, fn=f, gr=gr, hess=h, control=list(trace=TRUE))
source(file="SNewton3.R")
f <- function(x){
return(100*(x[2] - x[1]*x[1])^2 + (1-x[1])^2)
}
gr <- function(x){
return(c(-400*x[1]*(x[2] - x[1]*x[1]) - 2*(1-x[1]), 200*(x[2] - x[1]*x[1])))
}
h <- function(x) {
a11 <- 2 - 400*x[2] + 1200*x[1]*x[1]; a21 <- -400*x[1]
return(matrix(c(a11, a21, a21, 200), 2, 2))
}
fg <- function(x){ #function and gradient
val <- f(x)
attr(val,"gradient") <- gr(x)
val
}
fgh <- function(x){ #function and gradient
val <- f(x)
attr(val,"gradient") <- gr(x)
attr(val,"hessian") <- h(x)
val
}
x0 <- c(-1.2, 1)
sink("mbrn3-170408.txt", split=TRUE)
sol1 <- SNewton3(x0, fn=f, gr=gr, hess=h, control=list(trace=TRUE))
source(file="SNewton3.R")
f <- function(x){
return(100*(x[2] - x[1]*x[1])^2 + (1-x[1])^2)
}
gr <- function(x){
return(c(-400*x[1]*(x[2] - x[1]*x[1]) - 2*(1-x[1]), 200*(x[2] - x[1]*x[1])))
}
h <- function(x) {
a11 <- 2 - 400*x[2] + 1200*x[1]*x[1]; a21 <- -400*x[1]
return(matrix(c(a11, a21, a21, 200), 2, 2))
}
fg <- function(x){ #function and gradient
val <- f(x)
attr(val,"gradient") <- gr(x)
val
}
fgh <- function(x){ #function and gradient
val <- f(x)
attr(val,"gradient") <- gr(x)
attr(val,"hessian") <- h(x)
val
}
x0 <- c(-1.2, 1)
sink("mbrn3-170408.txt", split=TRUE)
sol3 <- SNewton3(x0, fn=f, gr=gr, hess=h, control=list(trace=TRUE))
source(file="SNewton3.R")
f <- function(x){
return(100*(x[2] - x[1]*x[1])^2 + (1-x[1])^2)
}
gr <- function(x){
return(c(-400*x[1]*(x[2] - x[1]*x[1]) - 2*(1-x[1]), 200*(x[2] - x[1]*x[1])))
}
h <- function(x) {
a11 <- 2 - 400*x[2] + 1200*x[1]*x[1]; a21 <- -400*x[1]
return(matrix(c(a11, a21, a21, 200), 2, 2))
}
fg <- function(x){ #function and gradient
val <- f(x)
attr(val,"gradient") <- gr(x)
val
}
fgh <- function(x){ #function and gradient
val <- f(x)
attr(val,"gradient") <- gr(x)
attr(val,"hessian") <- h(x)
val
}
x0 <- c(-1.2, 1)
sink("mbrn3-170408.txt", split=TRUE)
sol3 <- SNewton3(x0, fn=f, gr=gr, hess=h, control=list(trace=TRUE))
sol3
source('~/temp/nlmissues/snewton/mbrn3.R')
source('~/temp/nlmissues/snewton/mbrn3.R')
source('~/temp/nlmissues/snewton/mbrn3.R')
source('~/temp/nlmissues/snewton/mbrn3.R')
sol3
source('~/temp/nlmissues/snewton/mbrn3.R')
source('~/temp/nlmissues/snewton/mbrn1.R')
source('~/temp/nlmissues/snewton/mbrn1.R')
source('~/temp/nlmissues/snewton/mbrn1.R')
source('~/temp/nlmissues/snewton/mbrn1.R')
source('~/temp/nlmissues/snewton/mbrn1.R')
