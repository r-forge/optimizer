source('~/rsvnall/optimizer/pkg/Roptanimation/R/smallpoly.R', echo=TRUE)
nv <- 6
cat("Polygon data:\n")
myhex <- polysetup(nv)
print(myhex)
x0 <- myhex$par0 # initial parameters
cat("Area:\n")
myhexa <- polyarea(x0)
print(myhexa)
cat("XY coordinates\n")
myheXY <- polypar2XY(x0)
source('~/rsvnall/optimizer/pkg/Roptanimation/R/smallpoly.R', echo=TRUE)
nv <- 6
cat("Polygon data:\n")
myhex <- polysetup(nv)
print(myhex)
x0 <- myhex$par0 # initial parameters
cat("Area:\n")
myhexa <- polyarea(x0)
print(myhexa)
cat("XY coordinates\n")
myheXY <- polypar2XY(x0)
print(myheXY)
plot(myheXY$x, myheXY$y, type="l")
cat("Constraints:\n")
myhexc<-polydistXY(myheXY)
print(myhexc)
cat("Vertex distances:")
print(sqrt(myhexc))
cat("check distances with polypar2distXY\n")
try1 <- polypar2distXY(x0)
print(try1)
cat("check distances with polypardist2 augmenting output with parameter squares\n")
try2 <- polypardist2(x0)
try2 <- c(x0[1:(nv-1)]^2, try2)
print(try2)
cat("Max abs difference = ",max(abs(try1-try2)),"\n")
library(optimrx)
cat("Attempt with setting objective big on violation\n")
x0 <- myhex$par0 # starting parameters (slightly reduced regular hexagon)
cat("Starting parameters:")
print(x0)
meths <- c("Nelder-Mead", "nmkb", "hjkb", "newuoa")
solb <- opm(x0, polyobjbig, method=meths, bignum=1e+10)
print(summary(solb, order=value, par.select=1:3)
```
print(summary(solb, order=value, par.select=1:3))
NMpar <- unlist(solb["Nelder-Mead",1:9])
nmkbpar <- unlist(solb["nmkb",1:9])
print(NMpar)
cat("Nelder-Mead area=", polyarea(NMpar))
print(nmkbpar)
cat("nmkb area=", polyarea(nmkbpar))
NMXY <- polypar2XY(NMpar)
nmkbXY <- polypar2XY(nmkbpar)
plot(NMXY$x, NMXY$y, col="red", type="l", xlim=c(-.25,0.85), ylim=c(-.05, 1.05), xlab="x", ylab="y")
points(nmkbXY$x, nmkbXY$y, col="blue", type="l")
title(main="Hexagons from NM (red) and nmkb (blue)")
sol1 <- bobyqa(start, polyobjq, lower=lb, upper=ub, control=list(iprint=2), penfactor=100)
library(minqa)
start
start <- myhex$par0 # starting parameters (slightly reduced regular hexagon)
lb <- myhex$lb
ub <- myhex$ub
print(start)
sol1 <- bobyqa(start, polyobjq, lower=lb, upper=ub, control=list(iprint=2), penfactor=100)
sol1a <- bobyqa(start, polyobjq, lower=lb, upper=ub, control=list(iprint=2), penfactor=1000)
sol1a <- bobyqa(st1, polyobjq, lower=lb, upper=ub, control=list(iprint=2), penfactor=1000)
st1 <- sol1$par
polyarea(st1)
sol1a <- bobyqa(st1, polyobjq, lower=lb, upper=ub, control=list(iprint=2), penfactor=1000)
st1<-sol1a$par
polyarea(st1)
sol1a <- bobyqa(st1, polyobjq, lower=lb, upper=ub, control=list(iprint=2), penfactor=1000)
st1<-sol1a$par
polyarea(st1)
st1<-sol1a$par
sol1a <- bobyqa(st1, polyobjq, lower=lb, upper=ub, control=list(iprint=2), penfactor=1000)
polyarea(st1)
st1<-sol1a$par
polyarea(st1)
sol1a <- bobyqa(st1, polyobjq, lower=lb, upper=ub, control=list(iprint=2), penfactor=10000)
st1<-sol1a$par
polyarea(st1)
sol1a <- bobyqa(st1, polyobjq, lower=lb, upper=ub, control=list(iprint=2), penfactor=10)
polyarea(st1)
st1<-sol1a$par
polyarea(st1)
sol1a <- bobyqa(st1, polyobjq, lower=lb, upper=ub, control=list(iprint=2), penfactor=1)
st1<-sol1a$par
polyarea(st1)
st1
polyarea(start)
sol2 <- optimr(st1, polyobjq, gr="grcentral", method="Rvmmin", trace=1, penfactor=10)
sol2
sol2 <- optimr(st1, polyobjq, gr="grcentral", method="nmkb", trace=1, penfactor=10)
sol2 <- optimr(st1, polyobjq, gr="grcentral", method="nmkb", trace=1, lower=lb, upper=ub, penfactor=10)
sol2 <- optimr(st1, polyobjq, gr="grcentral", method="nmkb", lower=lb, upper=ub, penfactor=10, control=list(trace=1))
st2<-sol2$par
polyarea(st2)
sol2a <- optimr(st2, polyobjq, gr="grcentral", method="nmkb", lower=lb, upper=ub, penfactor=1, control=list(trace=1))
st2 <- sol2a$par
polyarea(st2)
sol2a <- optimr(st2, polyobjq, gr="grcentral", method="nmkb", lower=lb, upper=ub, penfactor=.1, control=list(trace=1))
st2 <- sol2a$par
polyarea(st2)
sol2a <- optimr(st2, polyobjq, gr="grcentral", method="nmkb", lower=lb, upper=ub, penfactor=.5, control=list(trace=1))
st2 <- sol2a$par
polyarea(st2)
savehistory("161128polyobjq.txt")
