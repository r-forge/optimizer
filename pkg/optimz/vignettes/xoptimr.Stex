\documentclass[10pt]{article}

\usepackage{float}
\usepackage{amsmath} %% Does this have equation*
\usepackage{amssymb}
\usepackage{amsthm}

%% commands
\let\code=\texttt
\let\proglang=\textsf
\newcommand{\pkg}[1]{{\fontseries{b}\selectfont #1}}
\newcommand{\email}[1]{\href{mailto:#1}{\normalfont\texttt{#1}}}

\usepackage{Sweave}
\begin{document}

%\VignetteIndexEntry{optimr() Extension}
%\VignetteDepends{numDeriv, setRNG}
%\VignetteKeywords{extending optimr, additional optimizer}
%\VignettePackage{optimz}


\section{Extending the \code{optimr()} function in package \pkg{optimz}}
``\pkg{optimz}'' is a package intended to provide improved and extended 
function minimization tools for \emph{R}. Such facilities are
commonly referred to as ``optimization'', but the original \texttt{optim()}
function and its replacement in this package, that is, \texttt{optimr()},
only allow for the minimization or maximization of nonlinear functions of
multiple parameters subject to at most bounds constraints. Some methods
also permit fixed (masked) parameters. In general, we wish to find the
vector of parameters \code{bestpar} that minimize an objective function specified by an
\proglang{R} function \code{fn(par, ... )} where \code{par} is the general
vector of parameters, initially provided as the vector \code{start}, and 
the dot arguments are additional information needed to compute the function.
Function minimization methods may require information on the gradient or 
Hessian of the function, which we will identify as \code{gr(par, ...)}
and \code{hess(par, ....)}. 

%% \begin{Schunk}
%% \begin{Sinput}
%% > require("setRNG") 
%% > setRNG(list(kind="Wichmann-Hill", normal.kind="Box-Muller", seed=1236))
%% \end{Sinput}
%% \end{Schunk}


\section{How optimr() works}

\code{optimr()} is an aggregation of wrappers for a number of individual function
minimization ("optimization") tools available for \proglang{R}. The individual
wrappers are selected by a sequence of \code{if()} statements using the argument
\code{`method'} in the call to \code{optimr()}. 

To add a new optimizer, we need in general terms to carry out the following:

\begin{itemize}
\item Ensure the new function is available, that is, the package containing it
is installed;
\item Add an appropriate \code{if()} statement to select the new "method";
\item Translate the control list (\code{"control"}) elements of \code{optimr()}
into the corresponding control arguments (possibly not in a list of that name)
for the new "method";
\item If necessary, redefine the \proglang{R} function or functions to compute the 
value of the function, gradient and possibly Hessian of the objective function
so that the output is suited to the method at hand.
\item When derivative information is required by a method, we may also 
need to incorporate the possibility of numerical 
approximations to the derivative information. 
\end{itemize}



\end{document}
