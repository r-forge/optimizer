Subject:
RE: noisy nanoparticle modeling objective function
From:
"Mullen, Katharine Megan" <katharine.mullen@nist.gov>
Date:
Sat, 1 Aug 2009 01:03:17 -0400
To:
"Prof. John C Nash" <nashjc@uottawa.ca>
CC:
Ravi Varadhan <RVaradhan@jhmi.edu>

Dear Ravi and John, 

I forgot to change the permissions on the package and also to send you the test data!   It was a long week.. 

The test data is attached and now the permissions on the links I set before are alright.  Sorry for the hassle. 

best regards, 
Kate

R code to generate data:  (actually I just used 51 averages not 100 for time's sake; it will not matter)

library(nanop)
d1Av <- q1Av <- 0
xx<-simPart(r=10)
for(i in 1:100) {
  xy<-displacePart(xx, rcore=8, sigmashell=.02, sigmacore=.005)
  d1Av <- d1Av + calcPDF(xy)$gr
  q1Av <- q1Av + calcTotalScatt(xy)$gQ
  cat(i,"\n")
}
d1Av <- d1Av/100
q1Av <- q1Av/100

save("d1Av", file="d1Av_005_02_8alt.RData")
save("q1Av", file="q1Av_005_02_8alt.RData")

________________________________________
From: Prof. John C Nash [nashjc@uottawa.ca]
Sent: Friday, July 31, 2009 8:07 PM
To: Mullen, Katharine Megan
Cc: Ravi Varadhan
Subject: Re: noisy nanoparticle modeling objective function

Thanks. I fully expect there will be many glitches and hitches.

Today I found that while my Rcgmin goes fantastically from
xx<-rep(pi,n), it (and spg too in 1 try) go very slowly from
xx<-rep(-pi,n) (and to a different minimimum). There'll be lots of these
examples eventually, and we'll just have to try to learn from them.

Will see if I can spot any way to improve performance on the nanoparticles.

Cheers, JN


Mullen, Katharine Megan wrote:
> > Dear John and Ravi,
> >
> > Attached are some examples of calling bobyqa for the minimization of an objective function that results from modeling nanoparticles using either the pair distribution or total scattering structure function.
> >
> > The minimization does not work well; I would like at least the first significant digit in the values used to simulate the data to be reproduced in the estimates.  This could be because insufficient averaging is done to render the objective function predictable with respect to changes in the parameters.  If you have any ideas on improving performance it would of course be of interest of me to hear them.  At present the algorithm (which takes forever) presented in my useR! talk slides is the only means I have to reliably return good estimates.
> >
> > The script uses the package nanop.  This is available at
> > http://www.nat.vu.nl/~kate/nanop_1.0.tar.gz
> > http://www.nat.vu.nl/~kate/nanop_1.0.zip
> >
> > At the least this represents a challenging optimization problem, though perhaps not a success story for bobyqa.
> >
> > best regards,
> > Kate
d1Av_005_02_8alt.RData
	
Content-Description:
	d1Av_005_02_8alt.RData
Content-Type:
	application/octet-stream
Content-Encoding:
	base64

q1Av_005_02_8alt.RData
	
Content-Description:
	q1Av_005_02_8alt.RData
Content-Type:
	application/octet-stream
Content-Encoding:
	base64

